// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id           Int            @id @default(autoincrement())
  title        String
  contant      String
  published    Boolean        @default(false)
  authorId     Int
  author       User           @relation(fields: [authorId], references: [id])
  user         String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  postCategory PostCategory[]

  @@map("Post")
}

// user enum 
enum userRole {
  user
  admin
}

model User {
  id       Int      @id @default(autoincrement())
  userName String
  email    String   @unique
  role     userRole @default(user)
  profile  Profile? // one to on relationship
  post     Post[] // one to many relationship

  @@map("User")
}

model Profile {
  id     Int    @id @default(autoincrement())
  bio    String?
  userId Int    @unique // set up userId for user id
  // reference by user id 
  user   User   @relation(fields: [userId], references: [id])

  @@map("Profile")
}

model Category {
  id           Int            @id @default(autoincrement())
  name         String
  postCategory PostCategory[]

  @@map("Category")
}

model PostCategory {
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
  postId     Int
  post       Post     @relation(fields: [postId], references: [id])

  // id       Int @id @default(autoincrement())
  @@id([categoryId, postId])
  @@map("PostCategory")
}
